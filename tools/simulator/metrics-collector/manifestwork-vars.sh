#!/bin/bash
# envsubst variable for generating a ManifestWork to deploy on the HUB
# sample values extracted from cchun's hub

# Managed cluster name
managed_cluster_prefix="k3s"
#export CLUSTER=k3s-deca4f1a # name of the managed cluster, must match the namespace used on the hub

# Hub Thanos URL to write to
# oc get deployment metrics-collector-deployment -n open-cluster-management-addon-observability -o jsonpath='{.spec.template.spec.containers[0].env[1].value}'
# export HUB_THANOS_URL=https://observatorium-api-open-cluster-management-observability.apps.cchun.dev10.red-chesterfield.com/api/metrics/v1/default/api/v1/receive
thanos_url=$(oc get deployment metrics-collector-deployment -n open-cluster-management-addon-observability -o jsonpath='{.spec.template.spec.containers[0].env[1].value}')
# Certificates 
# oc get secret observability-managed-cluster-certs -o jsonpath='{.data.ca\.crt}' -n open-cluster-management-addon-observability
# export OBS_MANAGED_CLUSTER_CERTS_CA=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURjakNDQWxxZ0F3SUJBZ0lRWEhoNENPUVZtSU9BSHBMTFlGYmgxREFOQmdrcWhraUc5dzBCQVFzRkFEQlQKTVFzd0NRWURWUVFHRXdKVlV6RVdNQlFHQTFVRUNoTU5VbVZrSUVoaGRDd2dTVzVqTGpFc01Db0dBMVVFQXhNagpiMkp6WlhKMllXSnBiR2wwZVMxelpYSjJaWEl0WTJFdFkyVnlkR2xtYVdOaGRHVXdIaGNOTWpFd09URTNNVFF6Ck1EQTBXaGNOTWpZd09URTJNVFF6TURBMFdqQlRNUXN3Q1FZRFZRUUdFd0pWVXpFV01CUUdBMVVFQ2hNTlVtVmsKSUVoaGRDd2dTVzVqTGpFc01Db0dBMVVFQXhNamIySnpaWEoyWVdKcGJHbDBlUzF6WlhKMlpYSXRZMkV0WTJWeQpkR2xtYVdOaGRHVXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDdUIzSUVTdC93ClVzYzFpR0QvR3gwL1RuUCtFTXovU1VUbVBuUDhNMk5NSisyeEkvZDd2eGhEMXNHZzZ2UlI2N1pOY3czdHFDS0UKWW9CcXBiUU12QmM4Q0JMRmtjU3RzTnlaaFJUOVkvRm1KSGo1L0RQSkhpd2FNcUVONkVLRkloMXV0bmVibXF6SgpxaW9nTXhPZUpZeVZJT09EZFpsN1hFbkhlNkhITkFvMUcxcmJDaHFlRTMwT1IrOERrWm5PSnZMZE5wRm40OVdqClJBeS9TSUZNMWdtL2JSb3JPRFR5ZkpubkQzcFlSOXVCWkxwV1NEbWxMWUEzSDhDNlFUcnZzZWJLZm1GY1psUlQKb280Yjd3RTZzTkpsazNGa01ZMVdkbEtTNTQ0M1lLRno1M0d4dDkrSnNIYld5ZTZETFVvbXcxV1ZmSGtMQ3BvUgpJRlM0NEx5ZG1Jd0xBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFECkFRSC9NQjBHQTFVZERnUVdCQlNWVk5kdEZtNlRLdjNUd0J2bkJPYjFuTVdlS1RBTkJna3Foa2lHOXcwQkFRc0YKQUFPQ0FRRUFESGZEbWNQb3dPV2ljb01ETEQva1FROFRaeFFoakE4a001MmNPd2x5RVd3cXgxb1MvNDZ6Q2hDaApLTU02VG1ZWEcvUThjZ20zTEc2U2dpdUdvazdKemJ5YXFrVzlPNWpjdUYyRDZTcGFQeVR6UUc3SCtGTU5NTm1KCkRVb1lsRDBzSGxDbzlyK3JYT2JsdmlDajhNbFRhVlArRlN4K0ZuYWNSaHVheFJjM1N0TEhsaktGUHREL1kzYlQKZ3V6cktnYlNVZzl2V1I5S3NLUmhUSE9HNXo2am1MbXNTQWlNMTZ6UjlaOTR6aU54UWZiY1h4MjN5LzcveXFxZAp3WnA4Q2tKZkUxenAzK0cycDhkc2RxVXBMSGdRZlV0cFFzR3h3dDdkRE5TUzhIVEdzVHBuWi83T0JLL0QvZElvCmd2clJrbEpTeHZUK25sZUN3a1IzOVdLTzUvSFZoZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K

# oc get secret observability-controller-open-cluster-management.io-observability-signer-client-cert  -o jsonpath='{.data.tls\.crt}' -n -n open-cluster-management-addon-observability
# export OBS_SIGNER_CLIENT_TLS_CERT=LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURDVENDQWZHZ0F3SUJBZ0lVY0VrQnhVb1Nmb2MreXZadEhaWnlVMHJqSEs0d0RRWUpLb1pJaHZjTkFRRUwKQlFBd1V6RUxNQWtHQTFVRUJoTUNWVk14RmpBVUJnTlZCQW9URFZKbFpDQklZWFFzSUVsdVl5NHhMREFxQmdOVgpCQU1USTI5aWMyVnlkbUZpYVd4cGRIa3RZMnhwWlc1MExXTmhMV05sY25ScFptbGpZWFJsTUI0WERUSXhNRGt4Ck56RTBNekV3TUZvWERUSXlNRGt4TnpFME16RXdNRm93TmpFTU1Bb0dBMVVFQ3hNRFlXTnRNU1l3SkFZRFZRUUQKRXgxdFlXNWhaMlZrTFdOc2RYTjBaWEl0YjJKelpYSjJZV0pwYkdsMGVUQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCQXNDQmxoemRhOWxMNWYzNDh0N0VicHdBTUxZcmxnMzJCUGtZT2J0UnQwOHpPWWx0SVJUCnZQdWJNS0IyYmJGaWJKekcwSURxSHphWm9wVTlIUy9zODZlamdid3dnYmt3RGdZRFZSMFBBUUgvQkFRREFnV2cKTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRkxZdAo0eFBIajFNSlhVbTFWeWhXZ3N1TzlmemdNQjhHQTFVZEl3UVlNQmFBRkhtRmc3TnVBR1IyL3RTb2xhMHNNL2lkCjVFYXBNRVFHQTFVZEVRUTlNRHVDT1c5aWMyVnlkbUZpYVd4cGRIa3RZMjl1ZEhKdmJHeGxjaTVoWkdSdmJpNXYKY0dWdUxXTnNkWE4wWlhJdGJXRnVZV2RsYldWdWRDNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQWU3VQppWFZsSlB1TWwyT29sR2R1RmFET0hmUTFGMWpDMHhxQ1haWU5NR2FRdWZrMVJ2RGMxaHk0VHBIcFBNVVFDV2haCmtkRWN4ZXJBVkY0UDlKL1pIbjEzUjBXYVR5am5lM09PM3QxZER1UVRaTkVhcU1SdGpRUUh5RFh3MGN3MHdXeDQKdkdVcGx3QVd5MGgyNEM4VE14SFlSMnp5N1NFWFZQcVJMTFc5MDBWMk9RTElRTmc3VVBJVjVBb2FqcFBvMGhmTQpacy9tMzRBeXZjR2J1VEFPS3hva2EwMlNXbTY2bW9KUElCK0w3V0l6T3BUeW1NRFRUUXlBZnVSUDdQTjdSZmR1CkN0R3hFS1ZSS2RVY1E4Tk1YY3MwNlNQUWFZSW9ybmFZd09TT2c0Z0l0V0ozWndZVjk2Mm00aFZtU2owWmRwSHoKamdIZThRdE9haEw2UVo5M2pRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=

# oc get secret observability-controller-open-cluster-management.io-observability-signer-client-cert  -o jsonpath='{.data.tls\.crt}' -n -n open-cluster-management-addon-observability
# export OBS_SIGNER_CLIENT_TLS_KEY=LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUdBaFdJUXNSTW4rSnpRckFQWi9PNTAzbUk5Z2hXYVQwYWZxYWlYNkI1dytvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFQ3dJR1dITjFyMlV2bC9mankzc1J1bkFBd3RpdVdEZllFK1JnNXUxRzNUek01aVcwaEZPOAorNXN3b0hadHNXSnNuTWJRZ09vZk5wbWlsVDBkTCt6enB3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
managed_cluster_ca_cert=$(oc get secret observability-managed-cluster-certs -o jsonpath='{.data.ca\.crt}' -n open-cluster-management-addon-observability)
tls_cert=$(oc get secret observability-controller-open-cluster-management.io-observability-signer-client-cert -o jsonpath='{.data.tls\.crt}' -n open-cluster-management-addon-observability)
tls_key=$(oc get secret observability-controller-open-cluster-management.io-observability-signer-client-cert -o jsonpath='{.data.tls\.crt}' -n open-cluster-management-addon-observability)
# TODO: Other possible values to customize
# 1. Namespace to deploy on managed cluster. Defaults to open-cluster-management-addon-observability
# 2. metrics collector image to use

cp manifestwork-template.yaml manifestwork.yaml

sed -e "s,THANOS_URL,$thanos_url," \
    -e "s/MANAGED_CLUSTER_CA_CERT/$managed_cluster_ca_cert/" \
    -e "s/TLS_CERT/$tls_cert/" \
    -e "s/TLS_KEY/$tls_key/" manifestwork-template.yaml > manifestwork.yaml

START=${1:-$START}
NUM_MC=${2:-$NUM_MC}
END=$((START + NUM_MC - 1))
echo "START: $START
END: $END
TOTAL Managed Clusters: $NUM_MC"

hub=${3:-$hub}

folder=$hub/manifestworks
mkdir -p $folder
# generates all manifestworks
for i in $(seq $START $END) ; do
    cluster_name="$managed_cluster_prefix-$i"
    sed -e "s/CLUSTER_NAME/$cluster_name/" manifestwork.yaml > $folder/$cluster_name.yaml
done

# apply all manifestworks
oc apply -f $folder
